{
  "openapi": "3.0.0",
  "info": {
    "title": "superhero-api",
    "description": "BYUI CSE341 Team 19 API Documentation for superhero project",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://superheros-6636.onrender.com",
      "description": "production Render URL"
    },
    {
      "url": "http://localhost:8080",
      "description": "local dev URL"
    }
  ],
  "paths": {
    "/api/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get all Users",
        "description": "use this as the API key = Ezl0961tEpx2UxTZ5v2uKFK91qdNAr5npRlMT1zLcE3Mg68Xwaj3N8Dyp1R8IvFenrVwHRllOUxF0Og00l0m9NcaYMtH6Bpgdv7N",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add a new User",
        "description": "",
        "responses": {
          "200": {
            "description": "Success: User was updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: Data to update can not be empty!"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Not found: Cannot update User with id. Maybe User was not found!"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "delete all Users",
        "description": "",
        "responses": {
          "204": {
            "description": "Success: Users were deleted successfully!"
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get a single User by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found: User with id"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "update a User by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success: User was updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: Data to update can not be empty!"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Not found: Cannot update User with id. Maybe User was not found!"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "delete a single User by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Success: User was deleted successfully!"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Not found: Cannot delete User with id. Maybe User was not found!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/{id}/toggleActiveStatus": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "toggle a User active status by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success: User active status was toggled successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: Data to update can not be empty!"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Not found: Cannot toggle User active status with id. Maybe User was not found!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/github": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "login in using GitHub",
        "description": "the /api/auth/github route should be accessed directly in the browser, not via AJAX.",
        "responses": {
          "200": {
            "description": "Redirects to GitHub for authentication"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logs in a user",
        "description": "Use an existing username in the database, and the password is always \"secret\" ",
        "responses": {
          "200": {
            "description": "Login successful. Returns user data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "properties": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        },
                        "password": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "properties": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        },
                        "password": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The username and password do not match."
          },
          "500": {
            "description": "Internal server error. An error occurred during the authentication process or during the login session creation."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "logout",
        "description": "",
        "responses": {
          "200": {
            "description": "Logs out the user and redirects to the homepage"
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "status"
        ],
        "summary": "report login status",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "username",
              "email",
              "phone"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "username": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "phone": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "role": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "isActive": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "username",
              "password"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "username": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "password": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Login"
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://github.com/login/oauth/authorize",
            "tokenUrl": "https://github.com/login/oauth/access_token",
            "scopes": {
              "read:user": "Read user data"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "OAuth2": [
        "read:user"
      ]
    }
  ]
}